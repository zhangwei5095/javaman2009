/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package org.ndot.struts.action;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.ndot.ips.comm.IPSReportChannel;
import org.springframework.web.context.WebApplicationContext;
import org.springframework.web.struts.ContextLoaderPlugIn;

/** 
 * MyEclipse Struts
 * Creation date: 07-24-2009
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 * @struts.action-forward name="success" path="/WEB-INF/pages/ServiceControler.jsp"
 */
public class ServiceControlerAction extends Action {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		
		WebApplicationContext wctx =(WebApplicationContext)this.getServlet().getServletContext().getAttribute(ContextLoaderPlugIn.SERVLET_CONTEXT_PREFIX); 

//		AbstractRefreshableApplicationContext wctx=(AbstractRefreshableApplicationContext)request.getSession().getServletContext().getAttribute(WebApplicationContext.ContextLoaderPlugIn.SERVLET_CONTEXT_PREFIX);
//		 wctx.refresh();
		HttpSession session = request.getSession();
//		WebApplicationContext wctx=(WebApplicationContext)request.getSession().getServletContext().getAttribute(WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE);
		HashMap<String,IPSReportChannel> ipsChannels = (HashMap<String,IPSReportChannel>)wctx.getBeansOfType(IPSReportChannel.class);
		List<IPSReportChannel> channels = new ArrayList<IPSReportChannel>();
		for (Iterator iterator = ipsChannels.keySet().iterator(); iterator.hasNext();) {
			String name = (String) iterator.next();
			System.out.println("ÇþµÀ´úÂë£º"+name);
			IPSReportChannel channel = ipsChannels.get(name);
			System.out.println("ÇþµÀÃû³Æ£º"+ channel.getName());
			System.out.println("¼àÌý¶Ë¿ÚºÅ£º"+ channel.getPort());
			channels.add(channel);
		}
		session.setAttribute("ipsChannels", channels);
		return mapping.findForward("success");
	}
}